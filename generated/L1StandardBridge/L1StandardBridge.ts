// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ERC20DepositInitiated extends ethereum.Event {
  get params(): ERC20DepositInitiated__Params {
    return new ERC20DepositInitiated__Params(this);
  }
}

export class ERC20DepositInitiated__Params {
  _event: ERC20DepositInitiated;

  constructor(event: ERC20DepositInitiated) {
    this._event = event;
  }

  get _l1Token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _l2Token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _data(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class ERC20WithdrawalFinalized extends ethereum.Event {
  get params(): ERC20WithdrawalFinalized__Params {
    return new ERC20WithdrawalFinalized__Params(this);
  }
}

export class ERC20WithdrawalFinalized__Params {
  _event: ERC20WithdrawalFinalized;

  constructor(event: ERC20WithdrawalFinalized) {
    this._event = event;
  }

  get _l1Token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _l2Token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get _data(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class ETHDepositInitiated extends ethereum.Event {
  get params(): ETHDepositInitiated__Params {
    return new ETHDepositInitiated__Params(this);
  }
}

export class ETHDepositInitiated__Params {
  _event: ETHDepositInitiated;

  constructor(event: ETHDepositInitiated) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class ETHWithdrawalFinalized extends ethereum.Event {
  get params(): ETHWithdrawalFinalized__Params {
    return new ETHWithdrawalFinalized__Params(this);
  }
}

export class ETHWithdrawalFinalized__Params {
  _event: ETHWithdrawalFinalized;

  constructor(event: ETHWithdrawalFinalized) {
    this._event = event;
  }

  get _from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class L1StandardBridge extends ethereum.SmartContract {
  static bind(address: Address): L1StandardBridge {
    return new L1StandardBridge("L1StandardBridge", address);
  }

  deposits(param0: Address, param1: Address): BigInt {
    let result = super.call("deposits", "deposits(address,address):(uint256)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBigInt();
  }

  try_deposits(param0: Address, param1: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "deposits",
      "deposits(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  l2TokenBridge(): Address {
    let result = super.call("l2TokenBridge", "l2TokenBridge():(address)", []);

    return result[0].toAddress();
  }

  try_l2TokenBridge(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "l2TokenBridge",
      "l2TokenBridge():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  messenger(): Address {
    let result = super.call("messenger", "messenger():(address)", []);

    return result[0].toAddress();
  }

  try_messenger(): ethereum.CallResult<Address> {
    let result = super.tryCall("messenger", "messenger():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DepositERC20Call extends ethereum.Call {
  get inputs(): DepositERC20Call__Inputs {
    return new DepositERC20Call__Inputs(this);
  }

  get outputs(): DepositERC20Call__Outputs {
    return new DepositERC20Call__Outputs(this);
  }
}

export class DepositERC20Call__Inputs {
  _call: DepositERC20Call;

  constructor(call: DepositERC20Call) {
    this._call = call;
  }

  get _l1Token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _l2Token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _l2Gas(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class DepositERC20Call__Outputs {
  _call: DepositERC20Call;

  constructor(call: DepositERC20Call) {
    this._call = call;
  }
}

export class DepositERC20ToCall extends ethereum.Call {
  get inputs(): DepositERC20ToCall__Inputs {
    return new DepositERC20ToCall__Inputs(this);
  }

  get outputs(): DepositERC20ToCall__Outputs {
    return new DepositERC20ToCall__Outputs(this);
  }
}

export class DepositERC20ToCall__Inputs {
  _call: DepositERC20ToCall;

  constructor(call: DepositERC20ToCall) {
    this._call = call;
  }

  get _l1Token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _l2Token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _l2Gas(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class DepositERC20ToCall__Outputs {
  _call: DepositERC20ToCall;

  constructor(call: DepositERC20ToCall) {
    this._call = call;
  }
}

export class DepositETHCall extends ethereum.Call {
  get inputs(): DepositETHCall__Inputs {
    return new DepositETHCall__Inputs(this);
  }

  get outputs(): DepositETHCall__Outputs {
    return new DepositETHCall__Outputs(this);
  }
}

export class DepositETHCall__Inputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }

  get _l2Gas(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class DepositETHCall__Outputs {
  _call: DepositETHCall;

  constructor(call: DepositETHCall) {
    this._call = call;
  }
}

export class DepositETHToCall extends ethereum.Call {
  get inputs(): DepositETHToCall__Inputs {
    return new DepositETHToCall__Inputs(this);
  }

  get outputs(): DepositETHToCall__Outputs {
    return new DepositETHToCall__Outputs(this);
  }
}

export class DepositETHToCall__Inputs {
  _call: DepositETHToCall;

  constructor(call: DepositETHToCall) {
    this._call = call;
  }

  get _to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _l2Gas(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DepositETHToCall__Outputs {
  _call: DepositETHToCall;

  constructor(call: DepositETHToCall) {
    this._call = call;
  }
}

export class DonateETHCall extends ethereum.Call {
  get inputs(): DonateETHCall__Inputs {
    return new DonateETHCall__Inputs(this);
  }

  get outputs(): DonateETHCall__Outputs {
    return new DonateETHCall__Outputs(this);
  }
}

export class DonateETHCall__Inputs {
  _call: DonateETHCall;

  constructor(call: DonateETHCall) {
    this._call = call;
  }
}

export class DonateETHCall__Outputs {
  _call: DonateETHCall;

  constructor(call: DonateETHCall) {
    this._call = call;
  }
}

export class FinalizeERC20WithdrawalCall extends ethereum.Call {
  get inputs(): FinalizeERC20WithdrawalCall__Inputs {
    return new FinalizeERC20WithdrawalCall__Inputs(this);
  }

  get outputs(): FinalizeERC20WithdrawalCall__Outputs {
    return new FinalizeERC20WithdrawalCall__Outputs(this);
  }
}

export class FinalizeERC20WithdrawalCall__Inputs {
  _call: FinalizeERC20WithdrawalCall;

  constructor(call: FinalizeERC20WithdrawalCall) {
    this._call = call;
  }

  get _l1Token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _l2Token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _from(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class FinalizeERC20WithdrawalCall__Outputs {
  _call: FinalizeERC20WithdrawalCall;

  constructor(call: FinalizeERC20WithdrawalCall) {
    this._call = call;
  }
}

export class FinalizeETHWithdrawalCall extends ethereum.Call {
  get inputs(): FinalizeETHWithdrawalCall__Inputs {
    return new FinalizeETHWithdrawalCall__Inputs(this);
  }

  get outputs(): FinalizeETHWithdrawalCall__Outputs {
    return new FinalizeETHWithdrawalCall__Outputs(this);
  }
}

export class FinalizeETHWithdrawalCall__Inputs {
  _call: FinalizeETHWithdrawalCall;

  constructor(call: FinalizeETHWithdrawalCall) {
    this._call = call;
  }

  get _from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class FinalizeETHWithdrawalCall__Outputs {
  _call: FinalizeETHWithdrawalCall;

  constructor(call: FinalizeETHWithdrawalCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _l1messenger(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _l2TokenBridge(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}
